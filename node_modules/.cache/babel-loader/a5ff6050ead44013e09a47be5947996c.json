{"ast":null,"code":"const logger = store => next => action => {\n  console.group(action.type);\n  console.log(\"The action: \", action);\n  const returnValue = next(action);\n  console.log(\"The new state: \", store.getState());\n  console.groupEnd();\n  return returnValue;\n};\n\nexport default logger;","map":{"version":3,"sources":["C:\\Anjali Pandey\\book Library System\\Library System\\src\\middleware\\myLogger.js"],"names":["logger","store","next","action","console","group","type","log","returnValue","getState","groupEnd"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,KAAK,IAAIC,IAAI,IAAIC,MAAM,IAAI;AACtCC,EAAAA,OAAO,CAACC,KAAR,CAAcF,MAAM,CAACG,IAArB;AACAF,EAAAA,OAAO,CAACG,GAAR,CAAY,cAAZ,EAA4BJ,MAA5B;AACA,QAAMK,WAAW,GAAGN,IAAI,CAACC,MAAD,CAAxB;AACAC,EAAAA,OAAO,CAACG,GAAR,CAAY,iBAAZ,EAA+BN,KAAK,CAACQ,QAAN,EAA/B;AACAL,EAAAA,OAAO,CAACM,QAAR;AAEA,SAAOF,WAAP;AACD,CARH;;AAUE,eAAeR,MAAf","sourcesContent":["const logger = store => next => action => {\n    console.group(action.type);\n    console.log(\"The action: \", action);\n    const returnValue = next(action);\n    console.log(\"The new state: \", store.getState());\n    console.groupEnd();\n  \n    return returnValue;\n  };\n  \n  export default logger;\n"]},"metadata":{},"sourceType":"module"}