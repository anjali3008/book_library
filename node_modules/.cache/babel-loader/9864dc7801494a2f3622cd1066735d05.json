{"ast":null,"code":"import _objectSpread from \"C:\\\\Anjali Pandey\\\\book Library System\\\\Library System\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nlet books = {\n  t1: {\n    id: \"t1\",\n    bookname: \"You Are Born to Blossom\",\n    text: \"This transformation would require elevating the standards of supremacy and thereby preserving the sanctity of public institutions. The book uses the simile of a tree to define the process of knowledge abiding fruits of affluence in the modern globalised world.\",\n    bookcount: 10,\n    bookauthor: \"author 1\",\n    timestamp: 1518043995650\n  },\n  t2: {\n    id: \"t2\",\n    bookname: \"Across the Seven Seas\",\n    text: \"A lot has been written about people who came to India at various times in history, but not enough about those who went from here to strange and surprising foreign lands.\",\n    bookcount: 11,\n    bookauthor: \"author 2\",\n    timestamp: 1518122597860\n  }\n};\nexport function _getBooks() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res(_objectSpread({}, books)), 1000);\n  });\n}\n\nfunction generateUID() {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\n\nfunction formatBook({\n  text,\n  bookname,\n  bookcount,\n  bookauthor\n}) {\n  return {\n    id: generateUID(),\n    text,\n    bookname,\n    bookcount,\n    bookauthor,\n    timestamp: Date.now()\n  };\n}\n\nexport function _saveBook({\n  text,\n  bookname,\n  bookcount,\n  bookauthor,\n  author\n}) {\n  return new Promise((res, rej) => {\n    const formattedBook = formatBook({\n      text,\n      bookname,\n      bookcount,\n      bookauthor,\n      author\n    });\n    setTimeout(() => {\n      books = _objectSpread({}, books, {\n        [formattedBook.id]: formattedBook\n      });\n      res(formattedBook);\n    }, 1000);\n  });\n}","map":{"version":3,"sources":["C:\\Anjali Pandey\\book Library System\\Library System\\src\\middleware\\_DATA.js"],"names":["books","t1","id","bookname","text","bookcount","bookauthor","timestamp","t2","_getBooks","Promise","res","rej","setTimeout","generateUID","Math","random","toString","substring","formatBook","Date","now","_saveBook","author","formattedBook"],"mappings":";AAAA,IAAIA,KAAK,GAAG;AACVC,EAAAA,EAAE,EAAE;AACFC,IAAAA,EAAE,EAAE,IADF;AAEFC,IAAAA,QAAQ,EAAE,yBAFR;AAGFC,IAAAA,IAAI,EAAE,sQAHJ;AAIFC,IAAAA,SAAS,EAAE,EAJT;AAKFC,IAAAA,UAAU,EAAE,UALV;AAMFC,IAAAA,SAAS,EAAE;AANT,GADM;AASVC,EAAAA,EAAE,EAAE;AACFN,IAAAA,EAAE,EAAE,IADF;AAEFC,IAAAA,QAAQ,EAAE,uBAFR;AAGFC,IAAAA,IAAI,EAAE,2KAHJ;AAIFC,IAAAA,SAAS,EAAE,EAJT;AAKFC,IAAAA,UAAU,EAAE,UALV;AAMFC,IAAAA,SAAS,EAAE;AANT;AATM,CAAZ;AAmBA,OAAO,SAASE,SAAT,GAAqB;AAC1B,SAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/BC,IAAAA,UAAU,CAAC,MAAMF,GAAG,mBAAMX,KAAN,EAAV,EAA0B,IAA1B,CAAV;AACD,GAFM,CAAP;AAGD;;AAED,SAASc,WAAT,GAAuB;AACrB,SAAOC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,EAAxC,IAA8CH,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,SAA3B,CAAqC,CAArC,EAAwC,EAAxC,CAArD;AACD;;AAED,SAASC,UAAT,CAAoB;AAAEf,EAAAA,IAAF;AAAQD,EAAAA,QAAR;AAAkBE,EAAAA,SAAlB;AAA6BC,EAAAA;AAA7B,CAApB,EAA+D;AAC7D,SAAO;AACLJ,IAAAA,EAAE,EAAEY,WAAW,EADV;AAELV,IAAAA,IAFK;AAGLD,IAAAA,QAHK;AAILE,IAAAA,SAJK;AAKLC,IAAAA,UALK;AAMLC,IAAAA,SAAS,EAAEa,IAAI,CAACC,GAAL;AANN,GAAP;AAQD;;AAED,OAAO,SAASC,SAAT,CAAmB;AAAElB,EAAAA,IAAF;AAAQD,EAAAA,QAAR;AAAkBE,EAAAA,SAAlB;AAA6BC,EAAAA,UAA7B;AAAyCiB,EAAAA;AAAzC,CAAnB,EAAsE;AAC3E,SAAO,IAAIb,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/B,UAAMY,aAAa,GAAGL,UAAU,CAAC;AAC/Bf,MAAAA,IAD+B;AAE/BD,MAAAA,QAF+B;AAG/BE,MAAAA,SAH+B;AAI/BC,MAAAA,UAJ+B;AAK/BiB,MAAAA;AAL+B,KAAD,CAAhC;AAQAV,IAAAA,UAAU,CAAC,MAAM;AACfb,MAAAA,KAAK,qBACAA,KADA;AAEH,SAACwB,aAAa,CAACtB,EAAf,GAAoBsB;AAFjB,QAAL;AAKAb,MAAAA,GAAG,CAACa,aAAD,CAAH;AACD,KAPS,EAOP,IAPO,CAAV;AAQD,GAjBM,CAAP;AAkBD","sourcesContent":["let books = {\n  t1: {\n    id: \"t1\",\n    bookname: \"You Are Born to Blossom\",\n    text: \"This transformation would require elevating the standards of supremacy and thereby preserving the sanctity of public institutions. The book uses the simile of a tree to define the process of knowledge abiding fruits of affluence in the modern globalised world.\",\n    bookcount: 10,\n    bookauthor: \"author 1\",\n    timestamp: 1518043995650\n  },\n  t2: {\n    id: \"t2\",\n    bookname: \"Across the Seven Seas\",\n    text: \"A lot has been written about people who came to India at various times in history, but not enough about those who went from here to strange and surprising foreign lands.\",\n    bookcount: 11,\n    bookauthor: \"author 2\",\n    timestamp: 1518122597860\n  }\n};\n\nexport function _getBooks() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...books }), 1000);\n  });\n}\n\nfunction generateUID() {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nfunction formatBook({ text, bookname, bookcount, bookauthor }) {\n  return {\n    id: generateUID(),\n    text,\n    bookname,\n    bookcount,\n    bookauthor,\n    timestamp: Date.now()\n  }\n}\n\nexport function _saveBook({ text, bookname, bookcount, bookauthor, author }) {\n  return new Promise((res, rej) => {\n    const formattedBook = formatBook({\n      text,\n      bookname,\n      bookcount,\n      bookauthor,\n      author\n    })\n\n    setTimeout(() => {\n      books = {\n        ...books,\n        [formattedBook.id]: formattedBook,\n      }\n\n      res(formattedBook)\n    }, 1000)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}