{"ast":null,"code":"var _jsxFileName = \"C:\\\\Anjali Pandey\\\\book Library System\\\\Library System\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Book from \"./Book\";\nimport FilteredBook from './filteredBook';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: '',\n      searchevalue: false,\n      filteredData: null\n    };\n\n    this.handleSearchBookName = e => {\n      const Searchbookname = e.target.value;\n      this.setState(() => ({\n        search: Searchbookname\n      }));\n    };\n\n    this.searchHandler = () => {\n      let allbooks = this.props.books;\n      let books = [];\n      Object.keys(allbooks).map(function (key, index) {\n        const eachbook = allbooks[key];\n        books.push(eachbook);\n      });\n      let filtervalue = books.filter(book => {\n        return book.bookname.toLowerCase() === this.state.search.toLowerCase();\n      });\n      this.setState({\n        searchevalue: true,\n        filteredData: filtervalue,\n        search: ''\n      });\n    };\n\n    this.allBooksHandler = () => {\n      this.setState({\n        searchevalue: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"books-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"book-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Book Library System\")), React.createElement(\"div\", {\n      className: \"search-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleSearchBookName,\n      className: \"search\",\n      type: \"text\",\n      value: this.state.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), this.state.search ? React.createElement(\"button\", {\n      onClick: this.searchHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Search\") : React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Search\")), React.createElement(\"button\", {\n      className: \"all-books\",\n      onClick: this.allBooksHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"All books\")), !this.state.searchevalue ? React.createElement(\"ol\", {\n      className: \"dashbord-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.booksIds.map(id => React.createElement(\"li\", {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Book, {\n      id: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })))) : React.createElement(FilteredBook, {\n      filteredbookvalue: this.state.filteredData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps({\n  booksReducer\n}) {\n  return {\n    booksIds: Object.keys(booksReducer).sort( //sorting from the newest to the oldest book\n    //If compareFunction(a, b) is greater than 0, sort b to an index lower than a, i.e. b comes first.\n    (a, b) => booksReducer[b].timestamp - booksReducer[a].timestamp),\n    books: booksReducer\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["C:\\Anjali Pandey\\book Library System\\Library System\\src\\components\\Dashboard.js"],"names":["React","Component","connect","Book","FilteredBook","Dashboard","state","search","searchevalue","filteredData","handleSearchBookName","e","Searchbookname","target","value","setState","searchHandler","allbooks","props","books","Object","keys","map","key","index","eachbook","push","filtervalue","filter","book","bookname","toLowerCase","allBooksHandler","render","booksIds","id","mapStateToProps","booksReducer","sort","a","b","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Book from \"./Book\";\nimport FilteredBook from './filteredBook';\n\nclass Dashboard extends Component {\n  state = {\n    search: '',\n    searchevalue: false,\n    filteredData: null\n  }\n\n  handleSearchBookName = e => {\n    const Searchbookname = e.target.value;\n    this.setState(() => ({\n      search: Searchbookname\n    }));\n  };\n  searchHandler = () => {\n    let allbooks = this.props.books;\n    let books = [];\n    Object.keys(allbooks).map(function (key, index) {\n      const eachbook = allbooks[key]\n      books.push(eachbook);\n    });\n    let filtervalue = books.filter(book => {\n      return book.bookname.toLowerCase() === this.state.search.toLowerCase()\n    })\n    this.setState({\n      searchevalue: true,\n      filteredData: filtervalue,\n      search: ''\n    })\n  }\n\n  allBooksHandler = () => {\n    this.setState({\n      searchevalue: false\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"books-list\">\n        <div className=\"book-head\"><h3 className=\"heading\">Book Library System</h3></div>\n        <div className=\"search-bar\"><div className=\"search\"><input onChange={this.handleSearchBookName} \n        className=\"search\" \n        type=\"text\"\n        value={this.state.search} />\n        {this.state.search ? <button onClick={this.searchHandler}>Search</button> : <button>Search</button>}</div>\n        <button className=\"all-books\" onClick={this.allBooksHandler}>All books</button></div>\n        \n        {!this.state.searchevalue ? (<ol className=\"dashbord-list\">\n          {this.props.booksIds.map(id => (\n            <li key={id}>\n              <Book id={id} />\n            </li>\n          ))}\n        </ol>) : <FilteredBook filteredbookvalue={this.state.filteredData} />}\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ booksReducer }) {\n  return {\n    booksIds: Object.keys(booksReducer).sort(\n      //sorting from the newest to the oldest book\n      //If compareFunction(a, b) is greater than 0, sort b to an index lower than a, i.e. b comes first.\n      (a, b) => booksReducer[b].timestamp - booksReducer[a].timestamp\n    ),\n    books: booksReducer\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}